name: Deploy to Netlify

on:
  push:
    branches:
      - main
      - "feature/*"
    paths:
      - "frontend/**" # Trigger on changes within frontend directories
  workflow_call:
    secrets:
      NETLIFY_AUTH_TOKEN:
        description: "Netlify Auth token"
        required: true

permissions:
  contents: read
  id-token: write
  actions: read

env:
  STAGE_NAME: ${{ fromJSON('["dev", "prod"]')[github.ref == 'refs/heads/main'] }}
  NX_BASE: ${{ fromJSON('["HEAD~1", "HEAD~2"]')[github.ref == 'refs/heads/main'] }}
  NX_HEAD: "HEAD"

jobs:
  deploy-netlify-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable corepack
        run: corepack enable
        shell: bash

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      # Get the latest changes from the main branch if it is the main branch
      - name: Pull latest changes from main
        if: ${{ env.STAGE_NAME == 'prod' }}
        run: |
          git fetch origin
          git checkout main
          git pull origin main

      - name: Install Workspace Dependencies
        run: |
          pnpm c set recursive-install=false --location=project
          pnpm install --no-frozen-lockfile

      - name: Install Packages Dependencies
        run: pnpm --filter "./frontend/packages/*" install --no-frozen-lockfile

      # Build affected packages
      # - name: Build packages
      #   run: |
      #     echo "github branch: ${{ github.ref }}"
      #     pnpm nx run-many -t build --exclude=*,!frontend/packages/* --verbose

      - name: Install Netlify CLI
        run: pnpm add -D netlify-cli -w

      # This will run netlify deploy for each project inside frontend/apps
      - name: Deploy netlify site
        # Running the same command twice to add the env variables once and once to deploy the site
        # Can't do it in one script cause for some reason the updated env variables are not updated if done with one script
        # Using the same nx target instead of two so we don't have to add two targets in project.json
        run: |
          pnpm nx affected -t deploy-to-netlify --exclude=*,!frontend/apps/* --parallel=4 --verbose --STAGE=${{env.STAGE_NAME}} --UPDATE_ENV=true --output-style=static
          pnpm nx affected -t deploy-to-netlify --exclude=*,!frontend/apps/* --parallel=2 --verbose --STAGE=${{env.STAGE_NAME}} --output-style=static
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
